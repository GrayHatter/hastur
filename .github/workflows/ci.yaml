on: [push, pull_request]
jobs:
  linux-gcc:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Install
      run: |
          sudo apt update
          sudo apt install libxrandr-dev libgl-dev
          echo "CC=gcc-10" >> $GITHUB_ENV
          echo "CXX=g++-10" >> $GITHUB_ENV
          wget https://github.com/bazelbuild/bazelisk/releases/download/v1.9.0/bazelisk-linux-amd64 --output-document=bazel
    - name: Build
      run: bazel build //... --config gcc
    - name: Test
      run: bazel test //... --config gcc
    - name: Run
      run: bazel run browser:tui --config gcc

  linux-clang:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Install
      run: |
          sudo apt update
          sudo apt install libxrandr-dev libgl-dev
          echo "CC=clang-10" >> $GITHUB_ENV
          echo "CXX=clang++-10" >> $GITHUB_ENV
          wget https://github.com/bazelbuild/bazelisk/releases/download/v1.9.0/bazelisk-linux-amd64 --output-document=bazel
    - name: Build
      run: bazel build //... --config clang
    - name: Test
      run: bazel test //... --config clang
    - name: Run
      run: bazel run browser:tui --config clang

  linux-clang-asan:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Install
      run: |
          sudo apt update
          sudo apt install libxrandr-dev libgl-dev
          echo "CC=clang-10" >> $GITHUB_ENV
          echo "CXX=clang++-10" >> $GITHUB_ENV
          wget https://github.com/bazelbuild/bazelisk/releases/download/v1.9.0/bazelisk-linux-amd64 --output-document=bazel
    - name: Build
      run: bazel build //... --config clang --config asan
    - name: Test
      run: bazel test //... --config clang --config asan
    - name: Run
      run: bazel run browser:tui --config clang --config asan

  linux-clang-ubsan:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Install
      run: |
          sudo apt update
          sudo apt install libxrandr-dev libgl-dev
          echo "CC=clang-10" >> $GITHUB_ENV
          echo "CXX=clang++-10" >> $GITHUB_ENV
          wget https://github.com/bazelbuild/bazelisk/releases/download/v1.9.0/bazelisk-linux-amd64 --output-document=bazel
    - name: Build
      run: bazel build //... --config clang --config ubsan
    - name: Test
      run: bazel test //... --config clang --config ubsan
    - name: Run
      run: bazel run browser:tui --config clang --config ubsan

  windows-msvc:
    runs-on: windows-2019
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: Install
      run: curl --output bazel.exe https://github.com/bazelbuild/bazelisk/releases/download/v1.9.0/bazelisk-windows-amd64.exe
    - name: Build
      run: bazel build ///... --config msvc
    - name: Test
      run: bazel test ///... --config msvc
    - name: Run
      run: bazel run browser:tui --config msvc

  buildifier:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Install
      run: |
          wget https://github.com/bazelbuild/buildtools/releases/download/4.0.1/buildifier
          sudo chmod +x buildifier
    - name: Check
      run: ./buildifier --lint=warn --warnings=all -mode diff WORKSPACE $(find . -type f -iname *.BUILD -or -iname BUILD)
